{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Projects","IndexPage","_ref","data","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","query","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","styled_base_browser_esm","NavLink","Link","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","to","Email","EmailCopied","Footer","FooterIcons","Layout","_useState","useState","isEmailClicked","clickEmail","_useState2","didCopyEmail","setCopied","emailRef","useRef","copyEmail","range","document","createRange","selectNode","current","window","getSelection","removeAllRanges","addRange","execCommand","gatsby_browser_entry","react_default","header","layout_Content","onClick","prev","index_esm","href","ref","_755544856"],"mappings":"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","file":"component---src-pages-projects-js-337114e3378061fe2590.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  margin-bottom: 10px;\n    \n  background-image: linear-gradient(\n    -100deg,\n    rgba(150, 196, 255,0.1),\n    rgba(150, 196, 255, 0.2) 100%,\n    rgba(150, 196, 255,0.15)\n  );\n  \n`\n\nconst Projects = styled.div`\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Projects</h1>\n        <Projects>\n          Under construction\n        </Projects>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <NavLink to=\"/projects\">Projects</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\n\nimport React, { useState, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { FaGithub, FaTwitter, FaEnvelope } from \"react-icons/fa\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst Link = styled.a`\n  margin-right: 10px;\n  margin-left: 10px;\n`\n\nconst Email = styled.div`\n  display: flex;\n  position: relative;\n  color: gray;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  margin-top: 5px;\n  font-size: 22px;\n  font-weight: 300;\n  color: black;\n`\n\nconst EmailCopied = styled.div`\n  font-size: 15px;\n  display: flex;\n  justify-content: center;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 15px;\n`\n\nconst FooterIcons = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: 30px;\n`\n\nconst Layout = ({ children }) => {\n\n  let [isEmailClicked, clickEmail] = useState(false)\n  let [didCopyEmail, setCopied] = useState(false)\n  let emailRef = useRef(null)\n\n  let email = `shim2k@gmail.com`\n\n  function copyEmail() {\n    let range = document.createRange()\n    range.selectNode(emailRef.current)\n    window.getSelection().removeAllRanges() // clear current selection\n    window.getSelection().addRange(range) // to select text\n    document.execCommand(\"copy\")\n    window.getSelection().removeAllRanges()// to deselect\n    setCopied(true)\n  }\n\n  return (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n        <>\n          <Header siteTitle={data.site.siteMetadata.title}/>\n          <Content>\n            <main>{children}</main>\n          </Content>\n          <Footer>\n            <FooterIcons>\n              <Link onClick={() => clickEmail(prev => {\n                if (!prev) {\n                  setCopied(false)\n                }\n                return !prev\n              })}><FaEnvelope/></Link>\n              <Link href=\"https://github.com/shim2k\"><FaGithub/></Link>\n              <Link href=\"https://twitter.com/shim2k\"><FaTwitter/></Link>\n            </FooterIcons>\n            {isEmailClicked ? <Email onClick={copyEmail} ref={emailRef}>{email}</Email> : null}\n            {isEmailClicked && didCopyEmail ? <EmailCopied>Copied to clipboard!</EmailCopied> : null}\n          </Footer>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout"],"sourceRoot":""}